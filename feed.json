{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo",
    "subtitle": "",
    "icon": "http://example.com/assets/favicon.ico",
    "description": "略略略",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2025/03/24/FHACKER%20wp/",
            "url": "http://example.com/2025/03/24/FHACKER%20wp/",
            "title": "Fhacker wp",
            "date_published": "2025-03-24T11:13:29.000Z",
            "content_html": "<h1 id=\"misc\"><a class=\"anchor\" href=\"#misc\">#</a> MISC</h1>\n<h3 id=\"ez_jpg\"><a class=\"anchor\" href=\"#ez_jpg\">#</a> <strong>ez_jpg</strong></h3>\n<p>Base64 解码，开头为 9DFF，反过来为 FFD9，是 jpg 的文件尾</p>\n<p><img loading=\"lazy\" data-src=\"../images/192434.png\" alt=\"192434\" /></p>\n<p>使用反转工具</p>\n<p><img loading=\"lazy\" data-src=\"../images/200409.png\" alt=\"200409\" /></p>\n<p>导入到 010</p>\n<p><img loading=\"lazy\" data-src=\"../images/193807.png\" alt=\"193807\" /></p>\n<p>是一张杂乱的图片</p>\n<p><img loading=\"lazy\" data-src=\"../images/flag1.jpg\" alt=\"flag1\" /></p>\n<p>再拖进 010</p>\n<p><img loading=\"lazy\" data-src=\"../images/001852.png\" alt=\"001852\" /></p>\n<p>修改宽高</p>\n<p><img loading=\"lazy\" data-src=\"../images/003603.png\" alt=\"003603\" /></p>\n<p><img loading=\"lazy\" data-src=\"../images/wps6.png\" alt=\"img\" /></p>\n<p Steg_4nd_Zip_1s_G00d!=\"\">SYC</p>\n<h3 id=\"truth-of-word\"><a class=\"anchor\" href=\"#truth-of-word\">#</a> <strong>Truth of Word</strong></h3>\n<p>（1）</p>\n<p><img loading=\"lazy\" data-src=\"../images/202053.png\" alt=\"202053\" /></p>\n<p>Flag01=SYC{W0rd_H@5</p>\n<p>（2）</p>\n<p>改后缀名，.docx 改为.zip</p>\n<p><img loading=\"lazy\" data-src=\"../images/152005.png\" alt=\"152005\" /></p>\n<p>.bin 文件，改后缀为 zip</p>\n<p><img loading=\"lazy\" data-src=\"../images/151931.png\" alt=\"151931\" /></p>\n<p><img loading=\"lazy\" data-src=\"../images/202908.png\" alt=\"202908\" /></p>\n<p>Flag02 = @_Ama1n9</p>\n<p>（3）</p>\n<p><img loading=\"lazy\" data-src=\"../images/201853.png\" alt=\"201853\" />      <img loading=\"lazy\" data-src=\"../images/wps12.jpg\" alt=\"wps12\" /></p>\n<p>FLAG03=StrUCtu3e!}</p>\n<p W0rd_H@5@_Ama1n9_StrUCtu3e!=\"\">SYC</p>\n<h3 id=\"ez_pcap_1\"><a class=\"anchor\" href=\"#ez_pcap_1\">#</a> <strong>ez_pcap_1</strong></h3>\n<p>SMB 文件</p>\n<p><img loading=\"lazy\" data-src=\"../images/wps13.jpg\" alt=\"wps13\" /><img loading=\"lazy\" data-src=\"../images/wps14.jpg\" alt=\"wps14\" /></p>\n<h3 id=\"雪\"><a class=\"anchor\" href=\"#雪\">#</a> <strong>雪</strong></h3>\n<p>zip 拖进 010</p>\n<p><img loading=\"lazy\" data-src=\"../images/220739.png\" alt=\"220739\" /></p>\n<p>base64 解码  W3LC0M4，是文件的密码</p>\n<p>盲水印提取</p>\n<p><img loading=\"lazy\" data-src=\"../images/190323.png\" alt=\"190323\" /></p>\n<p>Th1si4st8eK3y</p>\n<p>随波逐流，雪花隐写</p>\n<p><img loading=\"lazy\" data-src=\"../images/183632.png\" alt=\"183632\" /></p>\n<p><img loading=\"lazy\" data-src=\"../images/wps18.jpg\" alt=\"wps18\" /></p>\n<h3 id=\"舔狗的觉醒\"><a class=\"anchor\" href=\"#舔狗的觉醒\">#</a> <strong>舔狗的觉醒</strong></h3>\n<p>密码爆破</p>\n<p><img loading=\"lazy\" data-src=\"../images/221103.png\" alt=\"221103\" /></p>\n<p>50 4b 03 04 是 zip 的文件头</p>\n<p>每两位左右交换</p>\n<p><img loading=\"lazy\" data-src=\"../images/221144.png\" alt=\"221144\" /></p>\n<p>AI 脚本</p>\n<p>&lt;!–code￼0–&gt;</p>\n<p>得到 pdf 文件</p>\n<p><img loading=\"lazy\" data-src=\"../images/221443.png\" alt=\"221443\" /></p>\n<p>把图片拖走</p>\n<p><img loading=\"lazy\" data-src=\"../images/190625.png\" alt=\"190625\" /></p>\n<p Y0u_arE_y0uR_0wn_hero=\"\">SYC</p>\n<h3 id=\"cimbar\"><a class=\"anchor\" href=\"#cimbar\">#</a> <strong>cimbar</strong></h3>\n<p><img loading=\"lazy\" data-src=\"../images/wps24.jpg\" alt=\"wps24\" /><img loading=\"lazy\" data-src=\"../images/212556.png\" alt=\"212556\" /></p>\n<p><img loading=\"lazy\" data-src=\"../images/193509.png\" alt=\"193509\" /></p>\n<h3 id=\"乌龟\"><a class=\"anchor\" href=\"#乌龟\">#</a> <strong>乌龟</strong></h3>\n<p>SSTV 扫描，得到图片</p>\n<p><img loading=\"lazy\" data-src=\"../images/wps27.jpg\" alt=\"wps27\" /></p>\n<p>PASS:Be4uti7ulSun5e7 密钥</p>\n<p><img loading=\"lazy\" data-src=\"../images/195521.png\" alt=\"195521\" /></p>\n<p>得到 serect.txt</p>\n<p><img loading=\"lazy\" data-src=\"../images/195714.png\" alt=\"195714\" /></p>\n<p>看不懂，问 AI，这段代码是用 Logo 语言编写的</p>\n<p>找一个在线工具</p>\n<p><img loading=\"lazy\" data-src=\"../images/172303.png\" alt=\"172303\" /></p>\n<p TU3T1E_P4INTING=\"\">SYC</p>\n<h3 id=\"welcome_jail\"><a class=\"anchor\" href=\"#welcome_jail\">#</a> <strong>Welcome_jail</strong></h3>\n<p>连接靶机</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250325191104302.png\" alt=\"image-20250325191104302\" /></p>\n<p>看到过滤  <code>['import', 'os', '00']</code></p>\n<p><code>open(chr(102)+chr(108)+chr(97)+chr(103)).read()</code> <img loading=\"lazy\" data-src=\"../images/image-20250325191944908.png\" alt=\"image-20250325191944908\" /></p>\n<p>flag 不在 /flag 文件中</p>\n<p>&lt;!–code￼1–&gt;</p>\n<p>用 chr 绕过</p>\n<p>&lt;!–code￼2–&gt;</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250326205603652.png\" alt=\"image-20250326205603652\" /></p>\n<p>还有一种方法，获取 <code>os._wrap_close</code>   类下标</p>\n<p>需要写脚本获取下标数，但我不会</p>\n<p>&lt;!–code￼3–&gt;</p>\n<p>还是用 chr 绕过</p>\n<p>&lt;!–code￼4–&gt;</p>\n<h3 id=\"hard_jail\"><a class=\"anchor\" href=\"#hard_jail\">#</a> hard_jail</h3>\n<p>![屏幕截图 2025-03-31 021232](…/images/ 屏幕截图 2025-03-31 021232.png)</p>\n<p>非预期，黑名单置空 black=[]</p>\n<p>&lt;!–code￼5–&gt;</p>\n<p>直接 env 得到 flag</p>\n<p>![](…/images/ 屏幕截图 2025-03-31 021702.png)</p>\n<p>或 ls</p>\n<p>![屏幕截图 2025-03-31 021529](…/images/ 屏幕截图 2025-03-31 021529.png)</p>\n<p>&lt;!–code￼6–&gt;</p>\n<p>![屏幕截图 2025-03-31 021832](…/images/ 屏幕截图 2025-03-31 021832.png)</p>\n<p>&lt;!–code￼7–&gt;</p>\n<p>&lt;!–code￼8–&gt;</p>\n<h3 id=\"secret-of-starven\"><a class=\"anchor\" href=\"#secret-of-starven\">#</a> Secret of Starven</h3>\n<p><a href=\"https://blog.csdn.net/qq_30464257/article/details/142205308\">SMB 流量分析 - CSDN 博客</a></p>\n<p>该 SMB 部分采用了 NTLM 协议进行身份验证，需要从流量包中提取 NTLM 协议各部分数据</p>\n<p>导出 SMB 对象</p>\n<p>![屏幕截图 2025-03-30 171550](…/images/ 屏幕截图 2025-03-30 171550.png)</p>\n<p>发现两个文件，jpg 没用，zip 加密了</p>\n<p>这题类似于护网杯的谍影重重</p>\n<p>![屏幕截图 2025-03-30 171512](…/images/ 屏幕截图 2025-03-30 171512.png)</p>\n<p>直接用 NTLMRawUnHide 一把梭</p>\n<p>&lt;!–code￼9–&gt;</p>\n<p>![屏幕截图 2025-03-30 203051](…/images/ 屏幕截图 2025-03-30 203051.png)</p>\n<p>![屏幕截图 2025-03-30 203100](…/images/ 屏幕截图 2025-03-30 203100.png)</p>\n<p>得到最终的哈希码，写入 1.txt</p>\n<p>Hashcat 是一款强大的密码破解工具，用 Hashcat 和 kali 自带的 rockyou.txt 进行爆破</p>\n<p>![屏幕截图 2025-03-31 004906](…/images/ 屏幕截图 2025-03-31 004906.png)</p>\n<p>![屏幕截图 2025-03-31 004949](…/images/ 屏幕截图 2025-03-31 004949.png)</p>\n<p>得到密码 spellorstarve，打开文件得到 flag</p>\n<p>也可以直接用 ARCHPR 爆破</p>\n<p>![屏幕截图 2025-03-31 010611](…/images/ 屏幕截图 2025-03-31 010611.png)</p>\n<p><a href=\"https://blog.csdn.net/2301_79200709/article/details/143518195\">2024 强网杯 - 谍影重重 5.0_强网杯 wp-CSDN 博客</a></p>\n<h3 id=\"友谊地久天长\"><a class=\"anchor\" href=\"#友谊地久天长\">#</a> 友谊地久天长</h3>\n<p>有一张损坏的图片，放到随波逐流，发现文件头被修改                                                               <img loading=\"lazy\" data-src=\"../images/44F2E635@A84FA51-%E4%BF%AE%E5%A4%8D%E6%96%87%E4%BB%B6%E5%A4%B4.png\" alt=\"44F2E635@A84FA51-修复文件头\" /></p>\n<p>得到的图片不全，再放到随波逐流 ，发现 CRC 结果，AT 应为 IDAT                                                                                          <img loading=\"lazy\" data-src=\"../images/image-20250325001412774.png\" alt=\"image-20250325001412774\" /></p>\n<p>放到 010，变成 IDAT，49 44 41 54                                                                                                          <img loading=\"lazy\" data-src=\"../images/image-20250325001631142.png\" alt=\"image-20250325001631142\" /></p>\n<p>修复后得到完整的二维码，扫出来是 Super_Snow_Sword_is_so_handsome!</p>\n<p><img loading=\"lazy\" data-src=\"../images/44F2E635@A840FA51-%E4%BF%AE%E5%A4%8D%E6%96%87%E4%BB%B6%E5%A4%B4.png\" alt=\"44F2E635@A840FA51-修复文件头\" /></p>\n<p>另一个是 .crypto 文件，没见过，搜索一下</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250324235215871.png\" alt=\"image-20250324235215871\" />                                                                                                                                下载 Encrypto，密码为上面二维码扫出的内容</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250324235438757.png\" alt=\"image-20250324235438757\" /></p>\n<p>得到一个 mp3 文件，但这个音频没用…</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250324235650031.png\" alt=\"image-20250324235650031\" /></p>\n<p>foremost 文件提取出一张图片                                                                              <img loading=\"lazy\" data-src=\"../images/00000002.png\" alt=\"00000002\" /></p>\n<p>LSB 隐写！[Blue plane 0](…/images/Blue plane 0.bmp)</p>\n<p>中间有字，放到 stegsolve 里的 Stereogram Solver: 立体试图 左右控制偏移                       <img loading=\"lazy\" data-src=\"../images/solved.bmp\" alt=\"solved\" /></p>\n<h3 id=\"史上最没节操的游戏\"><a class=\"anchor\" href=\"#史上最没节操的游戏\">#</a> <strong>史上最没节操的游戏</strong></h3>\n<p><strong>（1）游乐园</strong></p>\n<p>wireshark，http</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250327224122359.png\" alt=\"image-20250327224122359\" /></p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250327224720879.png\" alt=\"image-20250327224720879\" /></p>\n<p><strong>（2）电影院</strong></p>\n<p>音频里有电报声，去 bilibili 下载原音频，用 AU 分离，反相</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250327231335894.png\" alt=\"image-20250327231335894\" /></p>\n<p>SSTV 扫描</p>\n<p><img loading=\"lazy\" data-src=\"../images/2025-03-27_23.31.26.jpg\" alt=\"2025-03-27_23.31.26\" /></p>\n<p>访问<a href=\"https://www.cnblogs.com/handsomesnowsword\"> https://www.cnblogs.com/handsomesnowsword</a>，不断刷新</p>\n<p><img loading=\"lazy\" data-src=\"../images/002451.png\" alt=\"002451\" /></p>\n<p>_YPneR:2galf</p>\n<p>flag2:RenPY_</p>\n<p><strong>（3）漫展</strong></p>\n<p>用 aleappGUI 进行手机取证</p>\n<p><img loading=\"lazy\" data-src=\"../images/230740.png\" alt=\"230740\" /></p>\n<p>手机热点</p>\n<p><img loading=\"lazy\" data-src=\"../images/230842.png\" alt=\"230842\" /></p>\n<p><img loading=\"lazy\" data-src=\"../images/230925.png\" alt=\"230925\" /></p>\n<p>欠了多少钱，250000</p>\n<p><img loading=\"lazy\" data-src=\"../images/231037.png\" alt=\"231037\" /></p>\n<p>欠的是谁的钱，电话号码为 1231231233，QB</p>\n<p><img loading=\"lazy\" data-src=\"../images/231402.png\" alt=\"231402\" /></p>\n<p>在哪里，下北沢</p>\n<p><img loading=\"lazy\" data-src=\"../images/231530.png\" alt=\"231530\" /></p>\n<p>浏览记录</p>\n<p><img loading=\"lazy\" data-src=\"../images/231750.png\" alt=\"231750\" /></p>\n<p>访问</p>\n<p><img loading=\"lazy\" data-src=\"../images/231937.png\" alt=\"231937\" /></p>\n<p>藏头诗  FLAG3:WHERE_YOU_CAN_</p>\n<p><strong>（4）法庭</strong></p>\n<p>内存取证</p>\n<p><img loading=\"lazy\" data-src=\"../images/233844.png\" alt=\"233844\" /></p>\n<p><img loading=\"lazy\" data-src=\"../images/234246.png\" alt=\"234246\" /></p>\n<p>netscan</p>\n<p><img loading=\"lazy\" data-src=\"../images/234359.png\" alt=\"234359\" /></p>\n<p><img loading=\"lazy\" data-src=\"../images/234515.png\" alt=\"234515\" /></p>\n<p><strong>flag4</strong></p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250328235259949.png\" alt=\"image-20250328235259949\" /></p>\n<p>xyzzz   fjuth</p>\n<p>维吉尼亚解密</p>\n<p><img loading=\"lazy\" data-src=\"../images/2021041215573434.png\" alt=\"2021041215573434\" /></p>\n<p>提取码为前四位 ILVUI</p>\n<p>flag4：have_fun_</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250328235345158.png\" alt=\"image-20250328235345158\" /></p>\n<p>看作者的 QQ 空间，324</p>\n<p welcome_to_RenPY_WHERE_YOU_CAN_have_fun_324=\"\">flag</p>\n<h1 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> Web</h1>\n<h3 id=\"100的圆\"><a class=\"anchor\" href=\"#100的圆\">#</a> <strong>100% 的圆</strong></h3>\n<p><img loading=\"lazy\" data-src=\"../images/wps35.jpg\" alt=\"wps35\" /></p>\n<p>Base64 解码</p>\n<p><img loading=\"lazy\" data-src=\"../images/wps36.jpg\" alt=\"wps36\" /></p>\n<h3 id=\"ez-http\"><a class=\"anchor\" href=\"#ez-http\">#</a> <strong>ez-http</strong></h3>\n<p>cookie 用了 JWT 加密，hasFlag 为 false，需要将其改为 true</p>\n<p><img loading=\"lazy\" data-src=\"../images/154935.png\" alt=\"154935\" /></p>\n<p>AI 脚本</p>\n<p>&lt;!–code￼10–&gt;</p>\n<p><img loading=\"lazy\" data-src=\"../images/154735.png\" alt=\"154735\" /></p>\n<h3 id=\"baby_upload\"><a class=\"anchor\" href=\"#baby_upload\">#</a> <strong>baby_upload</strong></h3>\n<p>白名单后缀绕过，只对第一个后缀名进行了黑名单检测</p>\n<p><img loading=\"lazy\" data-src=\"../images/164501.png\" alt=\"164501\" /></p>\n<p>返回为空，上传成功</p>\n<p><img loading=\"lazy\" data-src=\"../images/164608.png\" alt=\"164608\" /></p>\n<p>蚁剑访问</p>\n<p><img loading=\"lazy\" data-src=\"../images/163527.png\" alt=\"163527\" /></p>\n<h3 id=\"secretindrivingschool\"><a class=\"anchor\" href=\"#secretindrivingschool\">#</a> <strong>SecretInDrivingSchool</strong></h3>\n<p><img loading=\"lazy\" data-src=\"../images/210726.png\" alt=\"210726\" /></p>\n<p>访问 / L000G1n.php</p>\n<p><img loading=\"lazy\" data-src=\"../images/210758.png\" alt=\"210758\" /></p>\n<p>密码猜是 SYC…</p>\n<p>进入后台，广告修改，传个一句话木马，eval 被过滤了，用 assert</p>\n<p>&lt;!–code￼11–&gt;</p>\n<p><img loading=\"lazy\" data-src=\"../images/202934.png\" alt=\"202934\" /></p>\n<p>再回到首页直接 cat flag</p>\n<p><img loading=\"lazy\" data-src=\"../images/204128.png\" alt=\"204128\" /></p>\n<p><img loading=\"lazy\" data-src=\"../images/204132.png\" alt=\"204132\" /></p>\n<p>或</p>\n<p><img loading=\"lazy\" data-src=\"../images/204640.png\" alt=\"204640\" /></p>\n<p>或</p>\n<p>字符串拼接起来执行就能绕过</p>\n<p>&lt;!–code￼12–&gt;</p>\n<p>或</p>\n<p>&lt;!–code￼13–&gt;</p>\n<p>或</p>\n<p>过滤了 eval，system，用 `` 执行系统命令</p>\n<p>&lt;!–code￼14–&gt;</p>\n<h3 id=\"can_you_pass_me\"><a class=\"anchor\" href=\"#can_you_pass_me\">#</a> Can_you_Pass_Me</h3>\n<p>SSTI</p>\n<p>一把梭 env|base64</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250325212450109.png\" alt=\"image-20250325212450109\" /></p>\n<p>base64 解码</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250325212602797.png\" alt=\"image-20250325212602797\" /></p>\n<p>或</p>\n<p>ls 读取目录</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250325212711596.png\" alt=\"image-20250325212711596\" /></p>\n<p>读取 app.py 查看源码</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250325212759126.png\" alt=\"image-20250325212759126\" /></p>\n<p>AI 分析代码</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250325213528234.png\" alt=\"image-20250325213528234\" /></p>\n<p>&lt;!–code￼15–&gt;</p>\n<p>也可以一个个查</p>\n<p>&lt;!–code￼16–&gt;</p>\n<p>然后写脚本获取下标</p>\n<p>&lt;!–code￼17–&gt;</p>\n<h3 id=\"rce_me\"><a class=\"anchor\" href=\"#rce_me\">#</a> rce_me</h3>\n<p><a href=\"https://blog.csdn.net/2301_76690905/article/details/134533626?ops_request_misc=%7B%22request%5Fid%22%3A%22883D7557-B54F-4D9F-B485-C93EAC6D9E1C%22%2C%22scm%22%3A%2220140713.130102334.pc%5Fall.%22%7D&amp;request_id=883D7557-B54F-4D9F-B485-C93EAC6D9E1C&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-134533626-null-null.142%5Ev100%5Epc_search_result_base5&amp;utm_term=flag%E9%87%8D%E5%A4%8D%E7%BB%95%E8%BF%87&amp;spm=1018.2226.3001.4187\">命令执行 RCE 及其绕过详细总结（各情景下的绕过）_命令执行绕过 - CSDN 博客</a></p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250325215422870.png\" alt=\"image-20250325215422870\" /></p>\n<p><code>md5(&quot;Geekchallenge2024_bmKtL&quot;)</code>  就是经典 0e，找一个数字 sha1 后 0e 的<br />\n当 PHP 版本小于 8 时，如果参数中出现中括号 [，中括号会被转换成下划线_</p>\n<p>&lt;!–code￼18–&gt;</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250325220609080.png\" alt=\"image-20250325220609080\" /></p>\n<p>变量覆盖，后面的在 get 传对应参数名</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250325221127949.png\" alt=\"image-20250325221127949\" /></p>\n<p>科学计数法中 e 在 intval 时解析成字母，截断转换，而在加法中正常表现为科学计数法</p>\n<p>intval 函数<strong>不能正常解析字符串形式的科学表达式</strong>，会返回底数<br />\n <code>intval($year)</code>  解析字符串 <code>'2023e2'</code>  返回 2023<br />\n 后面的是 <code>$year+1</code> ，数字和字符串相加，php 会把字符串转为数字再相加，所以就会被解析为 2023*2023</p>\n<p>&lt;!–code￼19–&gt;</p>\n<p>purpose 传数组就行，preg_match 无法处理数组</p>\n<p>输入 <code>purpose=rce</code>  也可以，</p>\n<p>正则表达式  <code>/.+?rce/ism</code>  可以拆解成以下部分：</p>\n<p>&lt;!–code￼20–&gt;</p>\n<p><code>purpose=rce</code>  可任意绕过正则匹配</p>\n<p>&lt;!–code￼21–&gt;</p>\n<p>eval 执行命令</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250325220515228.png\" alt=\"image-20250325220515228\" /></p>\n<h3 id=\"problem_on_my_web\"><a class=\"anchor\" href=\"#problem_on_my_web\">#</a> <strong>Problem_On_My_Web</strong></h3>\n<p>反射型 XSS，留言板过滤不严导致 XSS</p>\n<p>&lt;script&gt;alert(document.cookie);&lt;/script&gt;</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250326214745353.png\" alt=\"image-20250326214745353\" /></p>\n<p><code>url=http://127.0.0.1</code>   触发攻击，在 XSS 平台拿到 cookie，内含 flag：</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250326220049175.png\" alt=\"image-20250326220049175\" /></p>\n<h3 id=\"ezpop\"><a class=\"anchor\" href=\"#ezpop\">#</a> ezpop</h3>\n<p><strong> <code>__call</code>  方法</strong>：当调用对象中不存在的方法时触发</p>\n<p><strong> <code>__destruct</code>  方法</strong>：对象销毁时触发</p>\n<p><strong> <code>__invoke</code>  方法</strong>：对象被当作函数调用时触发</p>\n<p><strong> <code>__get</code>  方法</strong>：访问对象中不存在的属性时触发</p>\n<p><strong> <code>__toString</code>  方法</strong>：对象被当作字符串使用时触发</p>\n<p><strong> <code>file_put_contents</code> </strong> <strong>函数</strong>：用于将一个字符串写入到文件中。用于简单的文件写入操作。</p>\n<p><a href=\"https://xz.aliyun.com/news/7758?u_atoken=e1321d7b58a5a5b3a6b68ab75ca9cbd2&amp;u_asig=0a47315217432365705158965e007a\">file_put_content 和死亡・杂糅代码之缘 - 先知社区 (aliyun.com)</a></p>\n<p>&lt;!–code￼22–&gt;</p>\n<p>思路一般是想要将杂糅或者死亡代码分解掉；利用 php 伪协议 filter，结合编码或者相应的过滤器进行绕过；其原理就是将死亡或者杂糅代码分解成 php 无法识别的代码；</p>\n<p><strong>1.base64 编码绕过</strong></p>\n<p>利用 base64 解码，将死亡代码解码成乱码，使得 php 引擎无法识别</p>\n<p>&lt;!–code￼23–&gt;</p>\n<p>这里之所以将 $content 加了一个 a，是因为 base64 在解码的时候是将 4 个字节转化为 3 个字节，又因为死亡代码只有 phpexit 参与了解码，所以补上一位就可以完全转化。</p>\n<p><strong>2.rot13 编码绕过</strong></p>\n<p>原理和 base64 一样，可以直接转码分解死亡代码；</p>\n<p>但是，因为我们生成的文件内容之中前面的 <code>&lt;?</code>  并没有分解掉，这时，如果服务器开启了短标签，那么就会被解析，所以所以后面的代码就会错误，也就失去了作用。</p>\n<p><strong>3. htaccess 的预包含利用</strong></p>\n<p>利用 .htaccess 的预包含文件的功能来进行攻破；自定义包含我们的 flag 文件。</p>\n<p>&lt;!–code￼24–&gt;</p>\n<p>&lt;!–code￼25–&gt;</p>\n<p>exp</p>\n<p>&lt;!–code￼26–&gt;</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250329180701245.png\" alt=\"image-20250329180701245\" /></p>\n<h3 id=\"ez_include\"><a class=\"anchor\" href=\"#ez_include\">#</a> ez_include</h3>\n<p>&lt;!–code￼27–&gt;</p>\n<p>base64 解码</p>\n<p>&lt;!–code￼28–&gt;</p>\n<p>访问 /levelllll2.php</p>\n<p>&lt;!–code￼29–&gt;</p>\n<p>远程文件包含</p>\n<p>&lt;!–code￼30–&gt;</p>\n<p>bp 抓包，&lt;&gt; 和单引号会被 url 编码，需要修改的</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250329185849154.png\" alt=\"image-20250329185849154\" /></p>\n<p>查看环境变量</p>\n<p><img loading=\"lazy\" data-src=\"../images/image-20250329190000662.png\" alt=\"image-20250329190000662\" /></p>\n<h3 id=\"ez_ssrf\"><a class=\"anchor\" href=\"#ez_ssrf\">#</a> ez_SSRF</h3>\n<p>dirsearch 进行目录扫描，看到 <code>www.zip</code></p>\n<p>![屏幕截图 2025-03-31 192334](…/images/ 屏幕截图 2025-03-31 192334.png)</p>\n<p><code>/www.zip</code>  得到三个文件</p>\n<p>calculator.php</p>\n<p>&lt;!–code￼31–&gt;</p>\n<p>HTTP 头为 AUTHORIZATION（请求头的冒号后要有空格）</p>\n<p>&lt;!–code￼32–&gt;</p>\n<p>POST 传参的 expression</p>\n<p>&lt;!–code￼33–&gt;</p>\n<p>h4d333333.php</p>\n<p>&lt;!–code￼34–&gt;</p>\n<p>在 h4d333333.php 这部分设置了一系列东西，其中有设置 SOAP 服务的地址 location，在 calculator.php 的源码中可以看到有检查请求客户端的 IP 代码</p>\n<p>所以就可以想到 SSRF，我们可以在 h4d333333.php 创建的实例 SOAP 打 SSRF 去访问 calculator.php ，把 location 的值设置为 127.0.0.1 就可以绕过客户端 IP 的检测去访问 calculator.php</p>\n<p>GET 传参</p>\n<p>&lt;!–code￼35–&gt;</p>\n<p>还有一个 POST 请求的参数 user，可以利用 SSRF 写 shell，要 POST 打 SSRF 的话，接下来就是找需要提交哪些请求头和值</p>\n<p>&lt;!–code￼36–&gt;</p>\n<p>每个请求头之间要用 %0d%0a 进行分隔开来，这个是回车符（ \\r ）和换行符（ \\n ）的 URL 编码形式</p>\n<p>&lt;!–code￼37–&gt;</p>\n<p>![屏幕截图 2025-03-31 234926](…/images/ 屏幕截图 2025-03-31 234926.png)</p>\n<p>访问 shell.php，POST 参数 cmd 进行 RCE</p>\n<p>![屏幕截图 2025-03-31 235651](…/images/ 屏幕截图 2025-03-31 235651.png)</p>\n<p>![屏幕截图 2025-03-31 235719](…/images/ 屏幕截图 2025-03-31 235719.png)</p>\n<h1 id=\"crypto\"><a class=\"anchor\" href=\"#crypto\">#</a> Crypto</h1>\n<h3 id=\"凯撒加密\"><a class=\"anchor\" href=\"#凯撒加密\">#</a> <strong>凯撒加密</strong></h3>\n<p><img loading=\"lazy\" data-src=\"../images/201210.png\" alt=\"201210\" /></p>\n<h3 id=\"rsa\"><a class=\"anchor\" href=\"#rsa\">#</a> <strong>RSA</strong></h3>\n<p>&lt;!–code￼38–&gt;</p>\n<h3 id=\"共模攻击\"><a class=\"anchor\" href=\"#共模攻击\">#</a> <strong>共模攻击</strong></h3>\n<p>&lt;!–code￼39–&gt;</p>\n<h3 id=\"ecbpad\"><a class=\"anchor\" href=\"#ecbpad\">#</a> <strong>ECBpad</strong></h3>\n<p>&lt;!–code￼40–&gt;</p>\n<h3 id=\"x0r\"><a class=\"anchor\" href=\"#x0r\">#</a> <strong>X0R</strong></h3>\n<p>&lt;!–code￼41–&gt;</p>\n<h3 id=\"dp\"><a class=\"anchor\" href=\"#dp\">#</a> <strong>dp</strong></h3>\n<p>&lt;!–code￼42–&gt;</p>\n<h3 id=\"nc\"><a class=\"anchor\" href=\"#nc\">#</a> <strong>nc</strong></h3>\n<p>&lt;!–code￼43–&gt;</p>\n<h1 id=\"reverse\"><a class=\"anchor\" href=\"#reverse\">#</a> Reverse</h1>\n<h3 id=\"先来一道签到题\"><a class=\"anchor\" href=\"#先来一道签到题\">#</a> 先来一道签到题</h3>\n<p>AI</p>\n<p>&lt;!–code￼44–&gt;</p>\n",
            "tags": []
        }
    ]
}